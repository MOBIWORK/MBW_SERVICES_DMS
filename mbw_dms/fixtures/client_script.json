[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2024-10-04 16:13:18.528876",
  "module": "MBW DMS",
  "name": "Tính tổng giá trị sản phẩm trước chiết khấu",
  "script": "frappe.ui.form.on('Sales Order Item', {\n    qty: function(frm, cdt, cdn) {\n        calculate_custom_amount_before_discount(frm, cdt, cdn);\n    },\n    price_list_rate: function(frm, cdt, cdn) {\n        calculate_custom_amount_before_discount(frm, cdt, cdn);\n    }\n});\n\nfunction calculate_custom_amount_before_discount(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    if (row.price_list_rate && row.qty) {\n        row.custom_amount_before_discount = row.price_list_rate * row.qty;\n        frm.refresh_field('items'); // Thay 'items' bằng tên chính xác của child table nếu cần\n    }\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2024-10-04 16:13:47.650562",
  "module": "MBW DMS",
  "name": "Tính tổng giá trị trước chiết khấu",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    validate: function(frm) {\r\n        calculate_total_amount_before_discount(frm);\r\n    },\r\n    onload_post_render: function(frm) {\r\n        calculate_total_amount_before_discount(frm);\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Order Item', {\r\n    custom_amount_before_discount: function(frm, cdt, cdn) {\r\n        calculate_total_amount_before_discount(frm);\r\n    },\r\n    items_add: function(frm, cdt, cdn) {\r\n        calculate_total_amount_before_discount(frm);\r\n    },\r\n    items_remove: function(frm, cdt, cdn) {\r\n        calculate_total_amount_before_discount(frm);\r\n    }\r\n});\r\n\r\nfunction calculate_total_amount_before_discount(frm) {\r\n    let total_amount_before_discount = 0;\r\n\r\n    // Duyệt qua tất cả các hàng trong child table Sales Order Item\r\n    $.each(frm.doc.items || [], function(i, item) {\r\n        total_amount_before_discount += item.custom_amount_before_discount || 0;\r\n    });\r\n\r\n    // Đặt giá trị cho trường custom_total_amount_before_discount__\r\n    frm.set_value('custom_total_amount_before_discount__', total_amount_before_discount);\r\n    frm.refresh_field('custom_total_amount_before_discount__');\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2024-10-04 16:13:24.904296",
  "module": "MBW DMS",
  "name": "Tính tổng chiết khấu cho 1 sản phẩm trên SO",
  "script": "frappe.ui.form.on('Sales Order Item', {\r\n    discount_amount: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    },\r\n    qty: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    },\r\n    discount_percentage: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    },\r\n    custom_discount_on_total_amount: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    }\r\n});\r\n\r\nfunction calculate_discount_amount(frm, cdt, cdn) {\r\n    let row = locals[cdt][cdn];\r\n    \r\n    if (row.discount_amount && row.qty && row.price_list_rate) {\r\n        row.custom_discount_on_total_amount = row.discount_amount * row.qty;\r\n        frm.refresh_field('items');\r\n    }\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2024-10-04 16:13:41.094565",
  "module": "MBW DMS",
  "name": "Tính tổng tiền trước khuyến mãi cho SO và tổng khuyến mãi",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    validate: function(frm) {\r\n        calculate_total_discount(frm);\r\n    },\r\n    onload_post_render: function(frm) {\r\n        calculate_total_discount(frm);\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Order Item', {\r\n    custom_discount_on_total_amount: function(frm, cdt, cdn) {\r\n        calculate_total_discount(frm);\r\n    }\r\n});\r\n\r\nfunction calculate_total_discount(frm) {\r\n    let total_discount = 0;\r\n\r\n    // Duyệt qua tất cả các hàng trong child table Sales Order Item\r\n    $.each(frm.doc.items || [], function(i, item) {\r\n        total_discount += item.custom_discount_on_total_amount || 0;\r\n    });\r\n\r\n    // Đặt giá trị cho trường custom_product_discount_amount_\r\n    frm.set_value('custom_product_discount_amount_', total_discount);\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-03 16:27:32.156047",
  "module": "MBW DMS",
  "name": "Đọc giá trị grand total trong sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    before_save: function(frm) {\n        if(frm.doc.grand_total) {\n            let inWords = convertNumberToWords(frm.doc.grand_total);\n            frm.set_value(\"custom_grand_total_by_vietnamese\", inWords);\n        }\n    }\n});\n\nfunction convertNumberToWords(number) {\n    const units = [\"\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\"];\n    const teens = [\"mười\", \"mười một\", \"mười hai\", \"mười ba\", \"mười bốn\", \"mười lăm\", \"mười sáu\", \"mười bảy\", \"mười tám\", \"mười chín\"];\n    const tens = [\"\", \"\", \"hai mươi\", \"ba mươi\", \"bốn mươi\", \"năm mươi\", \"sáu mươi\", \"bảy mươi\", \"tám mươi\", \"chín mươi\"];\n    const thousands = [\"\", \"ngàn\", \"triệu\", \"tỷ\"];\n\n    if (number === 0) return \"không đồng chẵn\";\n\n    number = number.toString();\n    number = number.replace(/[^0-9]*/g, '');\n    let words = [];\n    let j = 0;\n\n    while (number.length > 0) {\n        let chunk = parseInt(number.substr(-3));\n        number = number.substr(0, number.length - 3);\n\n        if (chunk) {\n            let chunkWords = [];\n            if (chunk > 99) {\n                chunkWords.push(units[Math.floor(chunk / 100)]);\n                chunkWords.push(\"trăm\");\n                chunk = chunk % 100;\n            }\n\n            if (chunk > 19) {\n                chunkWords.push(tens[Math.floor(chunk / 10)]);\n                chunk = chunk % 10;\n                if (chunk) chunkWords.push(units[chunk]);\n            } else if (chunk > 0) {\n                chunkWords.push(teens[chunk - 10]);\n            }\n\n            if (chunkWords.length > 0) {\n                chunkWords.push(thousands[j]);\n            }\n\n            words.unshift(chunkWords.join(\" \"));\n        }\n\n        j++;\n    }\n\n    return words.join(\" \") + \" đồng chẵn\";\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-03 16:28:16.680222",
  "module": "MBW DMS",
  "name": "Tính tổng giá trị trước chiết khấu cho SI",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n    validate: function(frm) {\r\n        calculate_total_amount_before_discount(frm);\r\n    },\r\n    onload_post_render: function(frm) {\r\n        calculate_total_amount_before_discount(frm);\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Invoice Item', {\r\n    custom_amount_before_discount: function(frm, cdt, cdn) {\r\n        calculate_total_amount_before_discount(frm);\r\n    },\r\n    items_add: function(frm, cdt, cdn) {\r\n        calculate_total_amount_before_discount(frm);\r\n    },\r\n    items_remove: function(frm, cdt, cdn) {\r\n        calculate_total_amount_before_discount(frm);\r\n    }\r\n});\r\n\r\nfunction calculate_total_amount_before_discount(frm) {\r\n    let total_amount_before_discount = 0;\r\n\r\n    // Duyệt qua tất cả các hàng trong child table Sales Invoice Item\r\n    $.each(frm.doc.items || [], function(i, item) {\r\n        total_amount_before_discount += item.custom_amount_before_discount || 0;\r\n    });\r\n\r\n    // Đặt giá trị cho trường custom_total_amount_before_discount__\r\n    frm.set_value('custom_total_amount_before_discount__', total_amount_before_discount);\r\n    frm.refresh_field('custom_total_amount_before_discount__');\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-03 16:32:04.924470",
  "module": "MBW DMS",
  "name": "Tính tổng giá trị khuyến mại theo sp cho SI",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n    validate: function(frm) {\r\n        calculate_total_discount(frm);\r\n    },\r\n    onload_post_render: function(frm) {\r\n        calculate_total_discount(frm);\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Invoice Item', {\r\n    custom_discount_on_total_amount: function(frm, cdt, cdn) {\r\n        calculate_total_discount(frm);\r\n    }\r\n});\r\n\r\nfunction calculate_total_discount(frm) {\r\n    let total_discount = 0;\r\n\r\n    // Duyệt qua tất cả các hàng trong child table Sales Invoice Item\r\n    $.each(frm.doc.items || [], function(i, item) {\r\n        total_discount += item.custom_discount_on_total_amount || 0;\r\n    });\r\n\r\n    // Đặt giá trị cho trường custom_product_discount_amount_\r\n    frm.set_value('custom_product_discount_amount_', total_discount);\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-03 16:32:33.306324",
  "module": "MBW DMS",
  "name": "Tính tổng trước chiết khấu cho sản phẩm",
  "script": "frappe.ui.form.on('Sales Invoice Item', {\n    qty: function(frm, cdt, cdn) {\n        calculate_custom_amount_before_discount(frm, cdt, cdn);\n    },\n    price_list_rate: function(frm, cdt, cdn) {\n        calculate_custom_amount_before_discount(frm, cdt, cdn);\n    }\n});\n\nfunction calculate_custom_amount_before_discount(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    if (row.price_list_rate && row.qty) {\n        row.custom_amount_before_discount = row.price_list_rate * row.qty;\n        frm.refresh_field('items'); // Thay 'items' bằng tên chính xác của child table nếu cần\n    }\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-03 16:33:20.802864",
  "module": "MBW DMS",
  "name": "Tính giá trị tổng tiền chiết khấu trong SI",
  "script": "frappe.ui.form.on('Sales Invoice Item', {\r\n    discount_amount: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    },\r\n    qty: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    },\r\n    discount_percentage: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    },\r\n    custom_discount_on_total_amount: function(frm, cdt, cdn) {\r\n        calculate_discount_amount(frm, cdt, cdn);\r\n    }\r\n});\r\n\r\nfunction calculate_discount_amount(frm, cdt, cdn) {\r\n    let row = locals[cdt][cdn];\r\n    \r\n    if (row.discount_amount && row.qty && row.price_list_rate) {\r\n        row.custom_discount_on_total_amount = row.discount_amount * row.qty;\r\n        frm.refresh_field('items');\r\n    }\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2024-10-04 16:13:30.460193",
  "module": "MBW DMS",
  "name": "Đọc giá trị Grand total cho mẫu in",
  "script": "frappe.ui.form.on('Sales Order', {\n    before_save: function(frm) {\n        if(frm.doc.grand_total) {\n            let inWords = convertNumberToWords(frm.doc.grand_total);\n            frm.set_value(\"custom_grand_total_by_vietnamese\", inWords);\n        }\n    }\n});\n\nfunction convertNumberToWords(number) {\n    const units = [\"\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\"];\n    const teens = [\"mười\", \"mười một\", \"mười hai\", \"mười ba\", \"mười bốn\", \"mười lăm\", \"mười sáu\", \"mười bảy\", \"mười tám\", \"mười chín\"];\n    const tens = [\"\", \"\", \"hai mươi\", \"ba mươi\", \"bốn mươi\", \"năm mươi\", \"sáu mươi\", \"bảy mươi\", \"tám mươi\", \"chín mươi\"];\n    const thousands = [\"\", \"ngàn\", \"triệu\", \"tỷ\"];\n\n    if (number === 0) return \"không đồng chẵn\";\n\n    number = number.toString();\n    number = number.replace(/[^0-9]*/g, '');\n    let words = [];\n    let j = 0;\n\n    while (number.length > 0) {\n        let chunk = parseInt(number.substr(-3));\n        number = number.substr(0, number.length - 3);\n\n        if (chunk) {\n            let chunkWords = [];\n            if (chunk > 99) {\n                chunkWords.push(units[Math.floor(chunk / 100)]);\n                chunkWords.push(\"trăm\");\n                chunk = chunk % 100;\n            }\n\n            if (chunk > 19) {\n                chunkWords.push(tens[Math.floor(chunk / 10)]);\n                chunk = chunk % 10;\n                if (chunk) chunkWords.push(units[chunk]);\n            } else if (chunk > 0) {\n                chunkWords.push(teens[chunk - 10]);\n            }\n\n            if (chunkWords.length > 0) {\n                chunkWords.push(thousands[j]);\n            }\n\n            words.unshift(chunkWords.join(\" \"));\n        }\n\n        j++;\n    }\n\n    return words.join(\" \") + \" đồng chẵn\";\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-04-19 09:31:08.126296",
  "module": "MBW DMS",
  "name": "Button iframe",
  "script": "async function get_api_key() {\n    let response = await frappe.call({\n        method: \"mbw_dms.api.helpers.get_dms_setting\",\n        args: {},\n        type: \"GET\"\n    })\n    \n    let rs = response.message\n    if(!rs) frappe.msgprint(__(\"Not found setting\"));\n    return rs\n}\n\n\nasync function get_industries() {\n    let response = await frappe.call({\n        method: \"mbw_dms.api.vgm.get_setting_industrys\"\n    })\n    if(!response && response.message.length ==0 ){\n         frappe.msgprint(__(\"Please setting industries\"));\n    }\n    return response.message\n}\n\nfrappe.ui.form.on('Customer', {\n\tasync refresh(frm) {\n\t\t// your code here\n\t\tlet d = new frappe.ui.Dialog({\n\t\t    fields: [\n\t\t        {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfieldtype: 'HTML',\n\t\t\t\t\t\tfieldname: \"html_1\",\n\t\t\t\t\t\toptions: '<div id=\"tab1-content\" style=\"height:100vh;width:100vw;\">Tổng hợp</div>'\n\t\t\t\t\t},\n\t\t        ]\n\t\t})\n\t\td.$wrapper.find('.modal-dialog').css(\"max-width\",\"100%\");\n\t\tlet address;\n\t\tif(frm.doc.customer_primary_address) {\n\t\t    address = frm.doc.customer_primary_address.split(\"-\")[0]\n\t\t}\n\t\tlet location\n\t\tif(frm.doc.customer_location_primary) {\n\t\t    let jsonLocation = JSON.parse(frm.doc.customer_location_primary);\n\t\t    location =[jsonLocation.long,jsonLocation.lat]\n\t\t}\n\t\tlet key = await get_api_key()\n\t\tlet industries = await get_industries()\n\t\t\t\tlet data ={\n        \"info_customer\": [\n                  {\n                    \"name\":frm.doc.name,\n                    \"address\": address || \"\",\n                    \"coordinate\": location || []\n                  }\n                ],\n                \"type_categories\": industries,\n                \"isochones\": [\n                  {\n                    \"type\": \"distance\",\n                    \"vehicle\": \"bike\",\n                    \"value\": 500,\n                    \"color_outline\": \"db1616\"\n                  },\n                  {\n                    \"type\": \"time\",\n                    \"vehicle\": \"bike\",\n                    \"value\": 180,\n                    \"color_outline\": \"b915ab\"\n                  },\n                  {\n                    \"type\": \"radius\",\n                    \"value\": 1000,\n                    \"color_outline\": \"2e0beb\"\n                  }\n                ],\n            \"api_key\":key\n              }\n  \n\tlet html_1 = `<div style=\"height:90vh;width:100%;\"><iframe src=\"https://analytic.apps.vgm.ai/EmbedCode/dashboard?config_dashboard=${encodeURIComponent(JSON.stringify(data))}\" title=\"Location Intelligence\" height=\"100%\" width=\"100%\"></iframe></div>`\n\t\tfrm.add_custom_button(__('Đánh giá thị trường'), function(){\n        d.fields_dict.html_1.$wrapper.html(html_1);\n        d.show()\n    });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-01-22 10:53:06.689361",
  "module": "MBW DMS",
  "name": "Customer Location Script",
  "script": "frappe.ui.form.on(\"Customer\", {\n  refresh: function (frm) {\n     \n  },\nonload:async function(frm) {\n    console.log('list_address',frm.doc.__onload.addr_list)\n    let primaryAddressObj = frm.doc.__onload.addr_list.find(address => address.is_primary_address == 1)\n    if(primaryAddressObj) {\n        frm.set_value('customer_location_primary',primaryAddressObj.address_location)\n        frm.doc.save()\n    }\n\n},\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-04-19 09:30:08.971563",
  "module": "MBW DMS",
  "name": "Add Action Customer",
  "script": "async function getInfo(doc) {\n    let response = await frappe.call({\n        method: \"mbw_dms.api.vgm.get_info\",\n        args: {\n            name: doc.name\n        }\n    })\n    if(!response) {\n        frappe.msgprint(__(\"Please select items to perform the action.\"));\n    }\n    doc = response.message\n    let address;\n    if(doc.customer_primary_address) {\n        address = doc.customer_primary_address.split(\"-\")[0]\n    }\n    let location\n    if(doc.customer_location_primary) {\n        let jsonLocation = JSON.parse(doc.customer_location_primary);\n        location =[jsonLocation.long,jsonLocation.lat]\n    }\n    return {\n                \"name\":doc.name,\n                \"address\": address || \"\",\n                \"coordinate\": location || []\n              }\n}\n\nasync function get_industries() {\n    let response = await frappe.call({\n        method: \"mbw_dms.api.vgm.get_setting_industrys\"\n    })\n    if(!response && response.message.length ==0 ){\n         frappe.msgprint(__(\"Please setting industries\"));\n    }\n    return response.message\n}\n\nasync function get_api_key() {\n    let response = await frappe.call({\n        method: \"mbw_dms.api.helpers.get_dms_setting\",\n        args: {},\n        type: \"GET\"\n    })\n    \n    let rs = response.message\n    if(!rs) frappe.msgprint(__(\"Not found setting\"));\n    return rs\n}\nfrappe.listview_settings['Customer'].refresh = async function(listview) {\n\n// add button in action\nlistview.page.add_action_item(__(\"So sánh thị trường\"),async function() {\n    let d = new frappe.ui.Dialog({\n        fields: [\n            {\n                    \n                    fieldtype: 'HTML',\n                    fieldname: \"html_1\",\n                    options: '<div id=\"tab1-content\" style=\"height:100vh;width:100vw;\">Tổng hợp</div>'\n                },\n            ]\n        })\n    d.$wrapper.find('.modal-dialog').css(\"max-width\",\"100%\");\n    let key = await get_api_key()\n    let industries = await get_industries()\n    let data ={\n    \"info_customer\": [\n              \n            ],\n            \"type_categories\": industries,\n            \"isochones\": [\n              {\n                \"type\": \"distance\",\n                \"vehicle\": \"bike\",\n                \"value\": 500,\n                \"color_outline\": \"db1616\"\n              },\n              {\n                \"type\": \"time\",\n                \"vehicle\": \"bike\",\n                \"value\": 180,\n                \"color_outline\": \"b915ab\"\n              },\n              {\n                \"type\": \"radius\",\n                \"value\": 1000,\n                \"color_outline\": \"2e0beb\"\n              }\n            ],\n            \"api_key\":key\n          }\n\n     var selected_items = listview.get_checked_items();\n     let datacustomer = []\n    if (selected_items && selected_items.length > 0) {\n         datacustomer = await Promise.all(selected_items.map(async(item) => new Promise((rs,rj) => {\n            return rs(getInfo(item))\n        })))\n    } else {\n        frappe.msgprint(__(\"Please select items to perform the action.\"));\n    }\n    data['info_customer'] = datacustomer\n    let html_1 = `<div style=\"height:90vh;width:100%;\"><iframe src=\"https://analytic.apps.vgm.ai/EmbedCode/dashboard?config_dashboard=${encodeURIComponent(JSON.stringify(data))}\" title=\"Location Intelligence\" height=\"100%\" width=\"100%\"></iframe></div>`\n    d.fields_dict.html_1.$wrapper.html(html_1);\n    d.show()\n});\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-09-23 10:07:07.868749",
  "module": "MBW DMS",
  "name": "Show location Customer",
  "script": "frappe.ui.form.on('Customer', {\n\t onload: function(frm) {\n        // Kiểm tra nếu developer_mode được bật\n        if (frappe.boot.developer_mode) {\n            frm.set_df_property('customer_location_primary', 'hidden', 0); // Hiển thị field 'location'\n        } else {\n            frm.set_df_property('customer_location_primary', 'hidden', 1); // Ẩn field 'location'\n        }\n    }\n})",
  "view": "Form"
 }
]